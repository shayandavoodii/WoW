name: Process JSON File

on:
  schedule:
    - cron: '0 */4 * * *' # Runs every 4 hours
  workflow_dispatch: # Allows manual triggering from the Actions tab

permissions: # Add this section to request write permissions
  contents: write

jobs:
  json_replace:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: '1.11' # Specify your desired Julia version

      - name: Install Julia packages
        run: julia -e 'using Pkg; Pkg.add(["HTTP", "JSON3"])'

      - name: Debug - List files and directories
        run: |
          pwd
          ls -al

      - name: Run Julia script to replace IPv4 with IPv6
        run: julia ${{ github.workspace }}/WoW.jl

      - name: Commit and push changes
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Attempt 9: Fetch File SHA before commit');
            const outputFilePath = process.env.GITHUB_WORKSPACE + '/modified_file.json';
            const fs = require('fs');

            if (fs.existsSync(outputFilePath)) {
              console.log('Modified JSON file exists. Fetching current file SHA...');

              let currentFileSha = null;
              try {
                const fileInfo = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: 'modified_file.json'
                });
                currentFileSha = fileInfo.data.sha;
                console.log(`Current file SHA fetched: ${currentFileSha}`);
              } catch (error) {
                if (error.status === 404) {
                  console.log('File not found remotely, proceeding to create new file.');
                } else {
                  console.error('Error fetching remote file SHA:', error);
                  throw error; // Stop workflow if SHA fetch fails (except for 404)
                }
              }


              const commitData = await github.rest.git.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.payload.after || context.sha
              });
              const treeSha = commitData.data.tree.sha;


              console.log('Committing changes with fetched SHA.');
              await github.rest.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'modified_file.json',
                message: 'Automated update: Replace ipv4 with ipv6 in JSON',
                content: fs.readFileSync(outputFilePath, 'base64'),
                sha: currentFileSha || treeSha // Use fetched SHA, or treeSha if file didn't exist
              });
              console.log('Commit successful.');

            } else {
              console.log('Modified JSON file was not created, skipping commit.');
            }